pipeline {
    agent any

    environment {
        REPO_DIR = "${WORKSPACE}"
        TF_DIR = "${REPO_DIR}/jenkinsproject/terraform"
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')  // AWS Credentials
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        AWS_DEFAULT_REGION = 'us-east-2'
    }

    stages {
        stage('Checkout Repository') {
            steps {
                git credentialsId: 'gitlab_connectivity', branch: 'H1', url: 'https://gitlab.stackroute.in/nw-jan-25/h1-sk-repo.git'
            }
        }

        stage('Retrieve SSH Key') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'pv-key', variable: 'SECERET_FILE')]) {
                        sh "cp ${SECERET_FILE} ${REPO_DIR}/secret-file.pem"
                        sh "chmod 600 ${REPO_DIR}/secret-file.pem"
                    }
                }
            }
        }

        stage('Terraform Init') {
            steps {
                script {
                    dir("${TF_DIR}") {
                        sh "terraform init"
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                script {
                    dir("${TF_DIR}") {
                        sh "terraform plan"
                    }
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    dir("${TF_DIR}") {
                        sh """terraform apply -var "key=${REPO_DIR}/secret-file.pem" -auto-approve"""
                    }
                }
            }
        }

        stage('Terraform Output') {
            steps {
                script {
                    // Optional: Display Terraform outputs
                    dir("${TF_DIR}") {
                    sh "terraform output"
                }
                }
            }
        }
        stage('Capture Private IP') {
            steps {
                script {
                    // Get the private IP from Terraform output
                    dir("${TF_DIR}") {
                    privateIp = sh(script: "terraform output -raw instance_ip", returnStdout: true).trim()
                    echo "Private IP of the instance: ${privateIp}"
               }
                }
            }
        }

        stage('Add Worker Node') {
            steps {
                script {
                    def workerName = 'jk-worker' // The name of the worker node
                    def workerIp = privateIp // The IP address of the worker node
                    def jenkinsMasterUrl = 'http://3.17.206.223:8010/' // Jenkins master URL
                    def secretKey = 'your-agent-secret' // Secret key generated for the agent in Jenkins
                    def sshCredentialsId = 'aws_ssh_key' // If using SSH, the credentials ID in Jenkins
                    // Example: Adding a worker node via Jenkins CLI
                    sh """
                    wget ${jenkinsMasterUrl}/jnlpJars/jenkins-cli.jar -O ${REPO_DIR}/jenkins-cli.jar
                    java -jar ${REPO_DIR}/jenkins-cli.jar -s ${jenkinsMasterUrl} -auth admin:admin create-node ${workerName} << EOF
                    <slave>
                        <name>${workerName}</name>
                        <description>Automated worker node</description>
                        <label>java</label>
                        <remoteFS>/home/ubuntu/jenkins/agent</remoteFS>
                        <numExecutors>2</numExecutors>
                        <mode>NORMAL</mode>
                        <launcher class="hudson.plugins.sshslaves.SSHLauncher">
                            <host>${workerIp}</host>
                            <port>22</port>
                            <credentialsId>${sshCredentialsId}</credentialsId>
                            <javaPath>/usr/bin/java</javaPath>
                        </launcher>
                    </slave>
                    EOF
                    """
                }
            }
        }
    }
}
