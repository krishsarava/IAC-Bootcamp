pipeline {
    agent { label 'java' }

    environment {
        REPO_DIR = "${env.WORKSPACE}"
        TF_DIR = "${REPO_DIR}/projectX/argocd"
    }

    stages {
        stage('Checkout Repository') {
            steps {
                git credentialsId: 'gitlab_connectivity', branch: 'H1', url: 'https://gitlab.stackroute.in/nw-jan-25/h1-sk-repo.git'
            }
        }

        stage('Install Helm') {
            steps {
                script {
                    sh """
                        if ! command -v helm &> /dev/null; then
                            echo "Helm not found, installing..."
                            curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
                        else
                            echo "Helm is already installed"
                        fi
                        helm version
                    """
                }
            }
        }

        stage('Retrieve SSH Key') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'pv-key', variable: 'SECRET_FILE')]) {
                        sh "cp ${SECRET_FILE} ${REPO_DIR}/secret-file.pem"
                        sh "chmod 600 ${REPO_DIR}/secret-file.pem"
                    }
                }
            }
        }

        stage('Install ArgoCD') {
            steps {
                script {
                    sh """
                        kubectl create namespace argocd || echo "Namespace already exists"
                        helm repo add argo https://argoproj.github.io/argo-helm
                        helm repo update
                        helm install argocd argo/argo-cd --namespace argocd --create-namespace
                        kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "NodePort"}}'
                    """
                }
            }
        }

        stage('Install ArgoCD via Ansible') {
            steps {
                script {
                    sh """
                        ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook --private-key=${REPO_DIR}/secret-file.pem \
                        ${REPO_DIR}/projectX/argocd/argocd-install.yaml
                    """
                }
            }
        }

        
    }
}
