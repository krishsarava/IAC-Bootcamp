pipeline {
    agent { label  'java'}

    environment {
        REPO_DIR = "${env.WORKSPACE}"
        TF_DIR = "${REPO_DIR}/k8scluster/terraform"
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')  // AWS Credentials
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        AWS_DEFAULT_REGION = 'us-east-2'
    }

    stages {
        stage('Checkout Repository') {
            steps {
                git credentialsId: 'gitlab_connectivity', branch: 'H1', url: 'https://gitlab.stackroute.in/nw-jan-25/h1-sk-repo.git'
            }
        }

        stage('Retrieve SSH Key') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'pv-key', variable: 'SECRET_FILE')]) {
                        sh "cp ${SECRET_FILE} ${REPO_DIR}/secret-file.pem"
                        sh "chmod 600 ${REPO_DIR}/secret-file.pem"
                    }
                }
            }
        }

        stage('Terraform Init') {
            steps {
                script {
                    dir("${TF_DIR}") {
                        sh "terraform init"
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                script {
                    dir("${TF_DIR}") {
                        sh "terraform plan"
                    }
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    dir("${TF_DIR}") {
                        sh "terraform apply -var 'key=${REPO_DIR}/secret-file.pem' -auto-approve"
                    }
                }
            }
        }

        stage('Wait After Terraform Apply') {
            steps {
                script {
                    sleep time: 30, unit: 'SECONDS' // Waits for 30 seconds
                }
            }
        }

        stage('Terraform Output') {
            steps {
                script {
                    dir("${TF_DIR}") {
                        sh "terraform output"
                    }
                }
            }
        }

        stage('Deploy k8scluster') {
            steps {
                script {
                     sh """
                        ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ${REPO_DIR}/k8scluster/terraform/inventory.ini \
                        --private-key=${REPO_DIR}/secret-file.pem \
                        ${REPO_DIR}/k8scluster/sk-ansible-final.yaml
                        """
                }
            }
        }

        stage('Copy kube.conf to console') {
            steps {
                script {
                     sh """
                        ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ${REPO_DIR}/k8scluster/terraform/inventory.ini \
                        --private-key=${REPO_DIR}/secret-file.pem \
                        ${REPO_DIR}/k8scluster/kubeconfig-transfer.yaml
                        """
                }
            }
        }
        
    }
}
